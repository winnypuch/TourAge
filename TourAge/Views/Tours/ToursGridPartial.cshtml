@using DevExpress.Web.Mvc.UI
@using TourAge.Models
@{
	GridViewExtension vGrid = Html.DevExpress().GridView<cTour>(vGridView =>
	{
		vGridView.Name = "gvTours";
		vGridView.CallbackRouteValues = new {Controller = "Tours", Action = "ToursGridPartial" };

		vGridView.SettingsEditing.AddNewRowRouteValues = new {Controller = "Tours", Action = "ToursAddNewPartial" };

		vGridView.SettingsEditing.UpdateRowRouteValues = new {Controller = "Tours", Action = "ToursUpdatePartial" };

		vGridView.SettingsEditing.DeleteRowRouteValues = new {Controller = "Tours", Action = "ToursDeletePartial" };

		//vGridView.ClientSideEvents.BeginCallback = "OnBeginCallback";
		vGridView.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
		//vGridView.SettingsEditing.Mode = GridViewEditingMode.PopupEditForm;
		vGridView.KeyFieldName = "Id"; //;CategoryDate;CategoryId

		vGridView.Settings.ShowFooter = false;
		vGridView.Settings.ShowColumnHeaders = true;
		vGridView.Styles.AlternatingRow.Enabled = DefaultBoolean.True;

		vGridView.SettingsBehavior.AllowFocusedRow = true;
		vGridView.SettingsBehavior.ConfirmDelete = true;
		vGridView.SettingsBehavior.EnableRowHotTrack = true;

		vGridView.SettingsPager.PageSize = 5;
		vGridView.Width = Unit.Percentage(100);

		vGridView.CustomJSProperties = (sender, e) =>
		{
			if (ViewData["EditError"] != null)
				e.Properties["cpEditError"] = ViewData["EditError"];
		};
		//vGridView.ClientSideEvents.ToolbarItemClick = "Categories_ToolbarItemClick";
		vGridView.Toolbars.Add(vToolBar =>
		{
			vToolBar.Enabled = true;
			vToolBar.Position = GridToolbarPosition.Top;
			vToolBar.ItemAlign = GridToolbarItemAlign.Right;
			vToolBar.SettingsAdaptivity.Enabled = true;
			vToolBar.SettingsAdaptivity.EnableCollapseRootItemsToIcons = true;

			vToolBar.Items.Add(GridViewToolbarCommand.New);

			vToolBar.Items.Add(GridViewToolbarCommand.Edit);

			vToolBar.Items.Add(GridViewToolbarCommand.Delete);

			vToolBar.Items.Add(i =>
			{
				i.SetTemplateContent(c => {
					ViewContext.Writer.Write(Html.AntiForgeryToken().ToHtmlString());
				});
			});
		});

		vGridView.Columns.Add("Id").Visible = false;
		vGridView.Columns.Add(vColumnNumber =>
		{
			vColumnNumber.FieldName = "№";
			vColumnNumber.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
			vColumnNumber.CellStyle.HorizontalAlign = HorizontalAlign.Center;
			vColumnNumber.UnboundType = DevExpress.Data.UnboundColumnType.Integer;
			vColumnNumber.Width = Unit.Pixel(20);
		});

		vGridView.Columns.Add(vColumnName =>
		{
			vColumnName.FieldName = "Name";
			vColumnName.Caption = "Наименование";
			vColumnName.Width = Unit.Pixel(125);
			vColumnName.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
			vColumnName.CellStyle.HorizontalAlign = HorizontalAlign.Center;
		});

		vGridView.Columns.Add(vColumnDocSum =>
		{
			vColumnDocSum.FieldName = "CostOfLiving";
			vColumnDocSum.Caption = "Стоимость проживания";
			vColumnDocSum.EditorProperties().SpinEdit(p =>
			{
				p.DisplayFormatString = "{0:#0.##;;\"\"}";
			});
			vColumnDocSum.Width = Unit.Pixel(60);
			vColumnDocSum.HeaderStyle.HorizontalAlign = HorizontalAlign.Right;
		});

		vGridView.Columns.Add(vColumnName =>
		{
			vColumnName.FieldName = "TDateBegin";
			vColumnName.Caption = "Дата начала";
			vColumnName.Width = Unit.Pixel(65);
			vColumnName.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
			vColumnName.CellStyle.HorizontalAlign = HorizontalAlign.Center;
		});

		vGridView.Columns.Add(vColumnName =>
		{
			vColumnName.FieldName = "TDateEnd";
			vColumnName.Caption = "Дата окончания";
			vColumnName.Width = Unit.Pixel(65);
			vColumnName.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
			vColumnName.CellStyle.HorizontalAlign = HorizontalAlign.Center;
		});

		vGridView.Columns.Add(vColumnName =>
		{
			vColumnName.FieldName = "ImageURL";
			vColumnName.Caption = "URL картинки";
			vColumnName.Width = Unit.Pixel(125);
			vColumnName.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
			vColumnName.CellStyle.HorizontalAlign = HorizontalAlign.Center;
		});

		vGridView.Columns.Add(vColumnName =>
		{
			vColumnName.FieldName = "Descriptions";
			vColumnName.Caption = "Описание";
			vColumnName.Width = Unit.Pixel(125);
			vColumnName.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
			vColumnName.CellStyle.HorizontalAlign = HorizontalAlign.Center;
		});

		vGridView.Columns.Add(vColumnName =>
		{
			vColumnName.FieldName = "RoutsIDsString";
			vColumnName.Caption = "Маршруты";
			vColumnName.Width = Unit.Pixel(200);
			vColumnName.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
			vColumnName.CellStyle.HorizontalAlign = HorizontalAlign.Center;
		});

		//vGridView.CustomColumnDisplayText = (s, e) =>
		//{
		//	if (e.Column.FieldName == "RoutsIDs")
		//	{
		//		int[] RoutsIDs = (int[])e.Value;
		//		string sText = cRouts.Fill().Where(t => RoutsIDs.Contains(t.Id)).
		//			Select(t => t.Name).DefaultIfEmpty().Aggregate((a, b) => a + ", " + b);
		//		e.DisplayText = sText ?? string.Empty;
		//	}
		//};
		vGridView.SetEditFormTemplateContent(vTemplate =>
		{
			Html.DevExpress().FormLayout(flSettings =>
			{
				flSettings.Name = "FormLayoutTours";
				flSettings.Width = Unit.Percentage(100);
				flSettings.ColCount = 2;

				flSettings.Items.Add(vColumnName =>
				{
					vColumnName.FieldName = "Name";
					vColumnName.Caption = "Наименование тура";
					vColumnName.NestedExtension().TextBox(p =>
					{
						p.Height = Unit.Pixel(20);
						p.Width = Unit.Percentage(100);
					});
					vColumnName.Width = Unit.Percentage(50);
				});

				flSettings.Items.Add(vColumnName =>
				{
					vColumnName.FieldName = "CostOfLiving";
					vColumnName.Caption = "Стоимость проживания";
					vColumnName.NestedExtension().SpinEdit(p =>
					{
						p.Height = Unit.Pixel(20);
						p.Width = Unit.Percentage(100);
					});
					vColumnName.Width = Unit.Percentage(50);
				});

				flSettings.Items.Add(i =>
				{
					i.FieldName = "TDateBegin";
					i.Caption = "Дата начала";
					i.Width = Unit.Percentage(50);
					i.NestedExtension().DateEdit(vDateEditProp =>
					{
						vDateEditProp.Width = Unit.Percentage(100);
						vDateEditProp.Height = Unit.Pixel(30);
						//vDateEditProp.ControlStyle.CssClass = "cmbLocs";
						vDateEditProp.Properties.EditFormat = EditFormat.Custom;
						vDateEditProp.Properties.DisplayFormatString = "dd/MM/yyyy";
						vDateEditProp.Properties.EditFormatString = "dd/MM/yyyy";
						//vDateEditProp.Properties.ClientSideEvents.ValueChanged = "SocialCategory_Check";
						//vDateEditProp.Properties.ClientSideEvents.KeyUp = "SocialCategory_Check";
						vDateEditProp.Properties.CalendarProperties.FastNavProperties.DisplayMode = FastNavigationDisplayMode.Popup;
						vDateEditProp.Properties.SelectInputTextOnClick = true;
						vDateEditProp.Properties.NullText = "Введите дату начала...";
						vDateEditProp.Properties.NullTextDisplayMode = NullTextDisplayMode.UnfocusedAndFocused;
						vDateEditProp.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.OnHover;
						vDateEditProp.Properties.DropDownButton.Image.Url = Url.Content("~/Content/Images/calendar.png");
						vDateEditProp.PreRender = (s, e) =>
						{
							ASPxDateEdit vDateEdit = s as ASPxDateEdit;

							if (vDateEdit != null)
							{
								if (vDateEdit.Date == DateTime.MaxValue.Date)
									vDateEdit.Value = "";
							}
						};
					});
				});

				flSettings.Items.Add(i =>
				{
					i.FieldName = "TDateEnd";
					i.Caption = "Дата окончания";
					i.Width = Unit.Percentage(50);
					i.NestedExtension().DateEdit(vDateEditProp =>
					{
						vDateEditProp.Width = Unit.Percentage(100);
						vDateEditProp.Height = Unit.Pixel(30);
						vDateEditProp.ControlStyle.CssClass = "cmbLocs";
						vDateEditProp.Properties.EditFormat = EditFormat.Custom;
						vDateEditProp.Properties.DisplayFormatString = "dd/MM/yyyy";
						vDateEditProp.Properties.EditFormatString = "dd/MM/yyyy";
						//vDateEditProp.Properties.ClientSideEvents.ValueChanged = "SocialCategory_Check";
						//vDateEditProp.Properties.ClientSideEvents.KeyUp = "SocialCategory_Check";
						vDateEditProp.Properties.CalendarProperties.FastNavProperties.DisplayMode = FastNavigationDisplayMode.Popup;
						vDateEditProp.Properties.SelectInputTextOnClick = true;
						vDateEditProp.Properties.NullText = "Введите дату окончания...";
						vDateEditProp.Properties.NullTextDisplayMode = NullTextDisplayMode.UnfocusedAndFocused;
						vDateEditProp.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.OnHover;
						vDateEditProp.Properties.DropDownButton.Image.Url = Url.Content("~/Content/Images/calendar.png");
						vDateEditProp.PreRender = (s, e) =>
						{
							ASPxDateEdit vDateEdit = s as ASPxDateEdit;

							if (vDateEdit != null)
							{
								if (vDateEdit.Date == DateTime.MaxValue.Date)
									vDateEdit.Value = "";
							}
						};
					});
				});

				flSettings.Items.Add(i =>
				{
					i.FieldName = "RoutsIDs";
					i.ShowCaption = DefaultBoolean.False;
					i.Width = Unit.Percentage(50);
				}).SetNestedContent(() =>
				{
					Html.RenderAction("RoutSelectPartial", new { CurrentID = DataBinder.Eval(vTemplate.DataItem, "Id") });
				});

				flSettings.Items.Add(vColumnName =>
				{
					vColumnName.FieldName = "ImageURL";
					vColumnName.Caption = "URL картинки";
					vColumnName.NestedExtension().TextBox(p =>
					{
						p.Height = Unit.Pixel(20);
						p.Width = Unit.Percentage(100);
					});
					vColumnName.Width = Unit.Percentage(50);
				});

				flSettings.Items.Add(vColumnName =>
				{
					vColumnName.FieldName = "Descriptions";
					vColumnName.Caption = "Описание";
					vColumnName.NestedExtension().Memo(p =>
					{
						p.Height = Unit.Pixel(50);
						p.Width = Unit.Percentage(100);
					});
					vColumnName.Width = Unit.Percentage(50);
				});

				flSettings.Items.Add(i =>
				{
					i.ShowCaption = DefaultBoolean.False;
				}).SetNestedContent(() =>
				{
					ViewContext.Writer.Write("<div style='float:right'>");
					Html.DevExpress().HyperLink(hlSettings =>
					{
						hlSettings.Name = "lnkUpdate";
						hlSettings.Properties.Text = "Сохранить";
						hlSettings.Properties.ClientSideEvents.Click = "function(s, e){ gvTours.UpdateEdit(); }";
					}).Render();

					Html.DevExpress().HyperLink(hlSettings =>
					{
						hlSettings.Name = "lnkCancel";
						hlSettings.Properties.Text = "Отмена";
						hlSettings.Style[HtmlTextWriterStyle.MarginLeft] = "5px";
						hlSettings.Properties.ClientSideEvents.Click = "function(s, e){ gvTours.CancelEdit(); }";
					}).Render();
					ViewContext.Writer.Write("</div>");
				});
			}).Bind(ViewData["cCity"] ?? (vTemplate.Grid.IsNewRowEditing ? new cTour() : vTemplate.Grid.GetRow(vTemplate.Grid.EditingRowVisibleIndex))).Render();
		});

		string sColumnFieldName;
		GridViewDataColumn vColumn;

		vGridView.CustomColumnDisplayText = (s, e) =>
		{
			vColumn = e.Column;

			if (vColumn == null)
				return;

			sColumnFieldName = vColumn.FieldName;

			switch (sColumnFieldName)
			{
				case "№":
					e.DisplayText = (e.VisibleIndex + 1).ToString();
					break;
			}
		};
	});

	if (ViewData["EditError"] != null)
	{
		vGrid.SetEditErrorText((string) ViewData["EditError"]);
	}
	vGrid.Bind(Model).GetHtml();
}
