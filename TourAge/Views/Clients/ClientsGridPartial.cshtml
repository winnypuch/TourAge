@using DevExpress.Web.Mvc.UI
@using TourAge.Models
@{
	GridViewExtension vGrid = Html.DevExpress().GridView<cClient>(vGridView =>
	{
		vGridView.Name = "gvClients";
		vGridView.CallbackRouteValues = new {Controller = "Clients", Action = "ClientsGridPartial" };

		vGridView.SettingsEditing.AddNewRowRouteValues = new {Controller = "Clients", Action = "ClientsAddNewPartial" };

		vGridView.SettingsEditing.UpdateRowRouteValues = new {Controller = "Clients", Action = "ClientsUpdatePartial" };

		vGridView.SettingsEditing.DeleteRowRouteValues = new {Controller = "Clients", Action = "ClientsDeletePartial" };

		//vGridView.ClientSideEvents.BeginCallback = "OnBeginCallback";
		vGridView.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
		//vGridView.SettingsEditing.Mode = GridViewEditingMode.PopupEditForm;
		vGridView.KeyFieldName = "Id"; //;CategoryDate;CategoryId

		vGridView.Settings.ShowFooter = false;
		vGridView.Settings.ShowColumnHeaders = true;
		vGridView.Styles.AlternatingRow.Enabled = DefaultBoolean.True;

		vGridView.SettingsBehavior.AllowFocusedRow = true;
		vGridView.SettingsBehavior.ConfirmDelete = true;
		vGridView.SettingsBehavior.EnableRowHotTrack = true;

		vGridView.SettingsPager.PageSize = 5;
		vGridView.Width = Unit.Percentage(100);

		vGridView.CustomJSProperties = (sender, e) =>
		{
			if (ViewData["EditError"] != null)
				e.Properties["cpEditError"] = ViewData["EditError"];
		};
		//vGridView.ClientSideEvents.ToolbarItemClick = "Categories_ToolbarItemClick";
		vGridView.Toolbars.Add(vToolBar =>
		{
			vToolBar.Enabled = true;
			vToolBar.Position = GridToolbarPosition.Top;
			vToolBar.ItemAlign = GridToolbarItemAlign.Right;
			vToolBar.SettingsAdaptivity.Enabled = true;
			vToolBar.SettingsAdaptivity.EnableCollapseRootItemsToIcons = true;

			vToolBar.Items.Add(GridViewToolbarCommand.New);

			vToolBar.Items.Add(GridViewToolbarCommand.Edit);

			vToolBar.Items.Add(GridViewToolbarCommand.Delete);

			vToolBar.Items.Add(i =>
			{
				i.SetTemplateContent(c => {
					ViewContext.Writer.Write(Html.AntiForgeryToken().ToHtmlString());
				});
			});
		});

		vGridView.Columns.Add("Id").Visible = false;

		vGridView.Columns.Add(vColumnNumber =>
		{
			vColumnNumber.FieldName = "№";
			vColumnNumber.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
			vColumnNumber.CellStyle.HorizontalAlign = HorizontalAlign.Center;
			vColumnNumber.UnboundType = DevExpress.Data.UnboundColumnType.Integer;
			vColumnNumber.Width = Unit.Pixel(20);
		});


		vGridView.Columns.Add(vColumnClientName =>
		{
			vColumnClientName.FieldName = "FIO";
			vColumnClientName.Caption = "ФИО клиента";
			vColumnClientName.Width = Unit.Pixel(125);
			vColumnClientName.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
			vColumnClientName.CellStyle.HorizontalAlign = HorizontalAlign.Center;
		});

		vGridView.SetEditFormTemplateContent(vTemplate =>
		{
			Html.DevExpress().FormLayout(flSettings =>
			{
				flSettings.Name = "FormLayoutClients";
				flSettings.Width = Unit.Percentage(100);
				flSettings.ColCount = 2;

				flSettings.Items.Add(vColumnClientName =>
				{
					vColumnClientName.FieldName = "LastName";
					vColumnClientName.Caption = "Фамилия";
					vColumnClientName.NestedExtension().TextBox(p =>
					{
						p.Height = Unit.Pixel(20);
						p.Width = Unit.Percentage(100);
					});
				});

				flSettings.Items.Add(vColumnClientName =>
				{
					vColumnClientName.FieldName = "Phones";
					vColumnClientName.Caption = "Телефоны";
					vColumnClientName.NestedExtension().TextBox(p =>
					{
						p.Height = Unit.Pixel(20);
						p.Width = Unit.Percentage(100);
					});
				});

				flSettings.Items.Add(vColumnClientName =>
				{
					vColumnClientName.FieldName = "Name";
					vColumnClientName.Caption = "Имя";
					vColumnClientName.NestedExtension().TextBox(p =>
					{
						p.Height = Unit.Pixel(20);
						p.Width = Unit.Percentage(100);
					});
				});

				flSettings.Items.AddEmptyItem();

				flSettings.Items.Add(vColumnClientName =>
				{
					vColumnClientName.FieldName = "Patronymic";
					vColumnClientName.Caption = "Отчество";
					vColumnClientName.NestedExtension().TextBox(p =>
					{
						p.Height = Unit.Pixel(20);
						p.Width = Unit.Percentage(100);
					});
				});

				flSettings.Items.AddEmptyItem();

				flSettings.Items.Add(i =>
				{
					i.ShowCaption = DefaultBoolean.False;
				}).SetNestedContent(() =>
				{
					ViewContext.Writer.Write("<div style='float:right'>");
					Html.DevExpress().HyperLink(hlSettings =>
					{
						hlSettings.Name = "lnkUpdate";
						hlSettings.Properties.Text = "Сохранить";
						hlSettings.Properties.ClientSideEvents.Click = "function(s, e){ gvClients.UpdateEdit(); }";
					}).Render();

					Html.DevExpress().HyperLink(hlSettings =>
					{
						hlSettings.Name = "lnkCancel";
						hlSettings.Properties.Text = "Отмена";
						hlSettings.Style[HtmlTextWriterStyle.MarginLeft] = "5px";
						hlSettings.Properties.ClientSideEvents.Click = "function(s, e){ gvClients.CancelEdit(); }";
					}).Render();
					ViewContext.Writer.Write("</div>");
				});
			}).Bind(ViewData["cClient"] ?? (vTemplate.Grid.IsNewRowEditing ? new cClient() : vTemplate.Grid.GetRow(vTemplate.Grid.EditingRowVisibleIndex))).Render();
		});

		string sColumnFieldName;
		GridViewDataColumn vColumn;

		vGridView.CustomColumnDisplayText = (s, e) =>
		{
			vColumn = e.Column;

			if (vColumn == null)
				return;

			sColumnFieldName = vColumn.FieldName;

			switch (sColumnFieldName)
			{
				case "№":
					e.DisplayText = (e.VisibleIndex + 1).ToString();
					break;
			}
		};
	});

	if (ViewData["EditError"] != null)
	{
		vGrid.SetEditErrorText((string) ViewData["EditError"]);
	}
	vGrid.Bind(Model).GetHtml();
}