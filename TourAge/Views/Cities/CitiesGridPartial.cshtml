@using DevExpress.Web.Mvc.UI
@using TourAge.Models
@{
	GridViewExtension vGrid = Html.DevExpress().GridView<cCity>(vGridView =>
	{
		vGridView.Name = "gvCities";
		vGridView.CallbackRouteValues = new {Controller = "Cities", Action = "CitiesGridPartial"};

		vGridView.SettingsEditing.AddNewRowRouteValues = new {Controller = "Cities", Action = "CitiesAddNewPartial"};

		vGridView.SettingsEditing.UpdateRowRouteValues = new {Controller = "Cities", Action = "CitiesUpdatePartial"};

		vGridView.SettingsEditing.DeleteRowRouteValues = new {Controller = "Cities", Action = "CitiesDeletePartial"};

		//vGridView.ClientSideEvents.BeginCallback = "OnBeginCallback";
		vGridView.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
		//vGridView.SettingsEditing.Mode = GridViewEditingMode.PopupEditForm;
		vGridView.KeyFieldName = "Id"; //;CategoryDate;CategoryId

		vGridView.Settings.ShowFooter = false;
		vGridView.Settings.ShowColumnHeaders = true;
		vGridView.Styles.AlternatingRow.Enabled = DefaultBoolean.True;

		vGridView.SettingsBehavior.AllowFocusedRow = true;
		vGridView.SettingsBehavior.ConfirmDelete = true;
		vGridView.SettingsBehavior.EnableRowHotTrack = true;

		vGridView.SettingsPager.PageSize = 5;
		vGridView.Width = Unit.Percentage(100);

		vGridView.CustomJSProperties = (sender, e) =>
		{
			if (ViewData["EditError"] != null)
				e.Properties["cpEditError"] = ViewData["EditError"];
		};
			//vGridView.ClientSideEvents.ToolbarItemClick = "Categories_ToolbarItemClick";
			vGridView.Toolbars.Add(vToolBar =>
			{
				vToolBar.Enabled = true;
				vToolBar.Position = GridToolbarPosition.Top;
				vToolBar.ItemAlign = GridToolbarItemAlign.Right;
				vToolBar.SettingsAdaptivity.Enabled = true;
				vToolBar.SettingsAdaptivity.EnableCollapseRootItemsToIcons = true;

				vToolBar.Items.Add(GridViewToolbarCommand.New);

				vToolBar.Items.Add(GridViewToolbarCommand.Edit);

				vToolBar.Items.Add(GridViewToolbarCommand.Delete);

				vToolBar.Items.Add(i =>
				{
					i.SetTemplateContent(c => {
						ViewContext.Writer.Write(Html.AntiForgeryToken().ToHtmlString());
					});
				});
			});

		vGridView.Columns.Add("Id").Visible = false;
		vGridView.Columns.Add(vColumnNumber =>
		{
			vColumnNumber.FieldName = "№";
			vColumnNumber.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
			vColumnNumber.CellStyle.HorizontalAlign = HorizontalAlign.Center;
			vColumnNumber.UnboundType = DevExpress.Data.UnboundColumnType.Integer;
			vColumnNumber.Width = Unit.Pixel(20);
		});

		vGridView.Columns.Add(vColumnName =>
		{
			vColumnName.FieldName = "Name";
			vColumnName.Caption = "Наименование";
			vColumnName.Width = Unit.Pixel(125);
			vColumnName.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
			vColumnName.CellStyle.HorizontalAlign = HorizontalAlign.Center;
		});

		vGridView.Columns.Add(vColumnName =>
		{
			vColumnName.FieldName = "Country.Name";
			vColumnName.Caption = "Наименование страны";
			vColumnName.Width = Unit.Pixel(125);
			vColumnName.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
			vColumnName.CellStyle.HorizontalAlign = HorizontalAlign.Center;
		});

		vGridView.SetEditFormTemplateContent(vTemplate =>
		{
			Html.DevExpress().FormLayout(flSettings =>
			{
				flSettings.Name = "FormLayoutCities";
				flSettings.Width = Unit.Percentage(100);
				flSettings.ColCount = 2;

				flSettings.Items.Add(vColumnCityName =>
				{
					vColumnCityName.FieldName = "Name";
					vColumnCityName.Caption = "Наименование города";
					vColumnCityName.NestedExtension().TextBox(p =>
					{
						p.Height = Unit.Pixel(20);
						p.Width = Unit.Percentage(100);
					});
				});


				flSettings.Items.Add(vColumnCountryName =>
				{
					vColumnCountryName.FieldName = "Country.Id";
					vColumnCountryName.Caption = "Наименование Страны";
					vColumnCountryName.NestedExtension().ComboBox(vComboBox =>
					{
						vComboBox.Properties.TextField = "Name";
						vComboBox.Properties.ValueField = "Id";
						vComboBox.Properties.ValueType = typeof(int);
						vComboBox.Properties.DataSource = cCountries.Fill();
						vComboBox.Properties.ValidationSettings.Display = Display.Dynamic;
						vComboBox.ShowModelErrors = true;
						vComboBox.PreRender = (s, e) =>
						{
							if (vTemplate.Grid.IsNewRowEditing)
							{
								ASPxComboBox vCBox = s as ASPxComboBox;

								if (vCBox != null)
								{
									vCBox.SelectedIndex = 0;
								}
							}
						};
					});
					vColumnCountryName.Width = Unit.Pixel(140);
				});

				flSettings.Items.AddEmptyItem();

				flSettings.Items.Add(i =>
				{
					i.ShowCaption = DefaultBoolean.False;
				}).SetNestedContent(() =>
				{
					ViewContext.Writer.Write("<div style='float:right'>");
					Html.DevExpress().HyperLink(hlSettings =>
					{
						hlSettings.Name = "lnkUpdate";
						hlSettings.Properties.Text = "Сохранить";
						hlSettings.Properties.ClientSideEvents.Click = "function(s, e){ gvCities.UpdateEdit(); }";
					}).Render();

					Html.DevExpress().HyperLink(hlSettings =>
					{
						hlSettings.Name = "lnkCancel";
						hlSettings.Properties.Text = "Отмена";
						hlSettings.Style[HtmlTextWriterStyle.MarginLeft] = "5px";
						hlSettings.Properties.ClientSideEvents.Click = "function(s, e){ gvCities.CancelEdit(); }";
					}).Render();
					ViewContext.Writer.Write("</div>");
				});
			}).Bind(ViewData["cCity"] ?? (vTemplate.Grid.IsNewRowEditing ? new cCity() : vTemplate.Grid.GetRow(vTemplate.Grid.EditingRowVisibleIndex))).Render();
		});

		string sColumnFieldName;
		GridViewDataColumn vColumn;

		vGridView.CustomColumnDisplayText = (s, e) =>
		{
			vColumn = e.Column;

			if (vColumn == null)
				return;

			sColumnFieldName = vColumn.FieldName;

			switch (sColumnFieldName)
			{
				case "№":
					e.DisplayText = (e.VisibleIndex + 1).ToString();
					break;
			}
		};
	});

	if (ViewData["EditError"] != null)
	{
		vGrid.SetEditErrorText((string) ViewData["EditError"]);
	}
	vGrid.Bind(Model).GetHtml();
}
